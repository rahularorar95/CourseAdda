{"version":3,"sources":["apis/index.js","history.js","actions/index.js","components/CustomMenu.js","components/Header.js","components/Course.js","components/CourseList.js","components/Loader/Loader.js","components/AllCourses.js","components/ProviderCourses.js","components/SearchResult.js","components/App/App.js","reducers/index.js","reducers/coursesReducer.js","index.js","components/Loader/loader.gif"],"names":["axios","create","baseURL","createBrowserHistory","fetchCourses","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","response","wrap","_context","prev","next","get","sent","type","payload","data","stop","_x","_x2","apply","this","arguments","CustomMenu","_Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","state","value","handleChange","e","setState","target","toLowerCase","trim","inherits","createClass","key","_this$props","props","children","style","className","labeledBy","react_default","createElement","aria-labelledby","FormControl_default","autoFocus","placeholder","onChange","React","Children","toArray","filter","child","includes","Component","Header","primaryFilter","primaryFilters","secondaryFilter","secondaryFilters","searchTerm","navigateHome","history","push","eventKey","eventObj","_this2","obj","keys","unshift","_this3","preventDefault","searchResults","allCourses","item","resultObj","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","course","err","return","setSearchResult","from","Set","_this4","Navbar","expand","variant","backgroundColor","Brand","onClick","cursor","Toggle","aria-controls","Collapse","id","Nav","Link","color","Form","onSubmit","handleSearch","Row","Col","Control","xs","Dropdown_default","as","ButtonGroup","Button","split","Menu","map","index","Item","active","onSelect","ek","eo","onSelectPrimary","onSelectSecondary","Spinner","animation","size","role","aria-hidden","connect","courses","providers","universities","subjects","result","Course","url","window","open","Fragment","Card_default","handleClick","Url","title","Body","Title","slice","Text","join","Footer","CourseList","provider","Provider","courseList","button","Button_default","viewAll","Jumbotron_default","marginBottom","CardDeck_default","components_Course","Loader_Loader","src","loader","alt","AllCourses","components_CourseList","renderAllLists","ProviderCourses","localCourses","childSubjects","populateState","nextProps","match","params","val","_","sortBy","reverse","eventObject","display","position","right","sortLength","SearchResult","content","App","react_router","components_Header","path","exact","component","combineReducers","action","Length","hasOwnProperty","Universities","Institutions","forEach","element","objectSpread","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.57eae111.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create({\n    baseURL:'https://api.myjson.com'\n})","\nimport {createBrowserHistory} from \"history\"\n\nexport default createBrowserHistory()","import axios from \"../apis\"\nimport history from \"../history\"\nexport const fetchCourses = () => async (dispatch, getState) => {\n    const response = await axios.get(\"/bins/1fq8pm\")\n    dispatch({ type: \"FETCH_COURSES\", payload: response.data })\n}\n\nexport const setSearchResult = (result,searchTerm) => {\n    history.push(\"/search\")\n    return {\n        type: \"SET_SEARCH_RESULT\",\n        payload: {result,searchTerm}\n    }\n}\n","import React, { Component } from \"react\"\nimport FormControl from 'react-bootstrap/FormControl'\nexport class CustomMenu extends Component {\n    state = { value: '' };\n    handleChange=(e)=> {\n      this.setState({ value: e.target.value.toLowerCase().trim() });\n    }\n  \n    render() {\n      const {\n        children,\n        style,\n        className,\n        'aria-labelledby': labeledBy,\n      } = this.props;\n  \n      const { value } = this.state;\n  \n      return (\n        <div style={style} className={className} aria-labelledby={labeledBy}>\n          <FormControl\n            autoFocus\n            className=\"mx-3 my-2 w-auto\"\n            placeholder=\"Type to search subjects...\"\n            onChange={this.handleChange}\n            value={value}\n          /> \n          <ul className=\"list-unstyled\">\n            {React.Children.toArray(children).filter(\n              child =>\n                !value || child.props.children.toLowerCase().includes(value),\n            )}\n          </ul>\n        </div>\n      );\n    }\n  }\n\n  export default CustomMenu","import React, { Component } from \"react\"\nimport { Navbar, Nav, Form, Button, Row, Col, Spinner } from \"react-bootstrap\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\"\nimport { connect } from \"react-redux\"\nimport { fetchCourses, setSearchResult } from \"../actions\"\nimport CustomMenu from \"./CustomMenu\"\nimport history from \"../history\"\nimport \"./App/App.css\"\nexport class Header extends Component {\n    componentDidMount() {\n        this.props.fetchCourses()\n    }\n    state = {\n        primaryFilter: \"All\",\n        primaryFilters: [\"All\", \"Universities\", \"Providers\", \"Subjects\"],\n        secondaryFilter: \"All\",\n        secondaryFilters: [],\n        searchTerm: \"\"\n    }\n    onSelectPrimary(eventKey, eventObj) {\n        this.setState({ primaryFilter: this.state.primaryFilters[eventKey] }, () => {\n            let obj = this.props[this.state.primaryFilter.toLowerCase()]\n            if (obj) {\n                let secondaryFilters = Object.keys(obj)\n                secondaryFilters.unshift(\"All\")\n                this.setState({ secondaryFilter: \"All\", secondaryFilters })\n            } else {\n                this.setState({ secondaryFilters: [] })\n            }\n        })\n    }\n\n    onChange(e) {\n        this.setState({ searchTerm: e.target.value })\n    }\n\n    handleSearch(e) {\n        e.preventDefault()\n        let searchResults = []\n        if (this.state.primaryFilter === \"All\") {\n            searchResults = this.props.allCourses.filter(item => {\n                return item[\"Course Name\"].toLowerCase().includes(this.state.searchTerm)\n            })\n        } else {\n            let resultObj = this.props[this.state.primaryFilter.toLowerCase()]\n\n            if (this.state.secondaryFilter === \"All\") {\n                for (let key in resultObj) {\n                    if (key) {\n                        for (let course of resultObj[key]) {\n                            if (course[\"Course Name\"].toLowerCase().includes(this.state.searchTerm)) {\n                                searchResults.push(course)\n                            }\n                        }\n                    }\n                }\n            } else {\n                let arr = resultObj[this.state.secondaryFilter]\n                searchResults = arr.filter(item => {\n                    return item[\"Course Name\"].toLowerCase().includes(this.state.searchTerm)\n                })\n            }\n        }\n\n        this.props.setSearchResult(Array.from(new Set(searchResults)),this.state.searchTerm)\n    }\n\n    onSelectSecondary(eventKey, eventObj) {\n        this.setState({ secondaryFilter: this.state.secondaryFilters[eventKey] })\n    }\n    navigateHome = () => {\n        this.setState({ primaryFilter: \"All\", secondaryFilters: [], searchTerm: \"\" })\n        history.push(\"/\")\n    }\n    render() {\n        return (\n            <div>\n                <Navbar\n                    expand='lg'\n                    variant='dark'\n                    style={{\n                        backgroundColor: \"#00953A\"\n                    }}\n                >\n                    <Navbar.Brand onClick={this.navigateHome} style={{ cursor: \"pointer\" }}>\n                        CourseAdda{\" \"}\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n                    <Navbar.Collapse id='basic-navbar-nav'>\n                        <Nav className='mr-auto'>\n                            <Nav.Link onClick={this.navigateHome} style={{ color: \"white\" }}>\n                                Home\n                            </Nav.Link>\n                        </Nav>\n\n                        <Form className='mr-auto' onSubmit={e => this.handleSearch(e)}>\n                            <Row className='mr-auto'>\n                                <Col className='search-box'>\n                                    <Form.Control\n                                        placeholder={this.props.allCourses ? \"Enter course to search...\" : \"Loading Courses...\"}\n                                        value={this.state.searchTerm}\n                                        onChange={e => this.onChange(e)}\n                                    />\n                                </Col>\n                                <Col xs={3}>\n                                    <Dropdown as={ButtonGroup}>\n                                        <Button className='search-filter'>Search in</Button>\n                                        <Dropdown.Toggle split variant='success' id='dropdown-split-basic'>\n                                            {this.state.primaryFilter}&nbsp; &nbsp;\n                                        </Dropdown.Toggle>\n\n                                        <Dropdown.Menu className='custom-dropdown'>\n                                            {this.state.primaryFilters.map((item, index) => {\n                                                if (item === this.state.primaryFilter) {\n                                                    return (\n                                                        <Dropdown.Item key={index} eventKey={index} active='true'>\n                                                            {item}\n                                                        </Dropdown.Item>\n                                                    )\n                                                }\n                                                return (\n                                                    <Dropdown.Item\n                                                        key={index}\n                                                        onSelect={(ek, eo) => this.onSelectPrimary(ek, eo)}\n                                                        eventKey={index}\n                                                    >\n                                                        {item}\n                                                    </Dropdown.Item>\n                                                )\n                                            })}\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </Col>\n                                {this.state.secondaryFilters.length > 0 && (\n                                    <Col>\n                                        <Dropdown as={ButtonGroup}>\n                                            <Button className='search-filter'>{this.state.primaryFilter}:</Button>\n                                            <Dropdown.Toggle split variant='success' id='dropdown-split-basic'>\n                                                {this.state.secondaryFilter}&nbsp; &nbsp;\n                                            </Dropdown.Toggle>\n\n                                            <Dropdown.Menu as={CustomMenu} className='custom-dropdown'>\n                                                {this.state.secondaryFilters.map((item, index) => {\n                                                    if (item === this.state.secondaryFilter) {\n                                                        return (\n                                                            <Dropdown.Item key={index} eventKey={index} active='true'>\n                                                                {item}\n                                                            </Dropdown.Item>\n                                                        )\n                                                    }\n                                                    return (\n                                                        <Dropdown.Item\n                                                            key={index}\n                                                            onSelect={(ek, eo) => this.onSelectSecondary(ek, eo)}\n                                                            eventKey={index}\n                                                        >\n                                                            {item}\n                                                        </Dropdown.Item>\n                                                    )\n                                                })}\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                    </Col>\n                                )}\n\n                                <Col>\n                                    <Button variant='success' className='search-button' onClick={e => this.handleSearch(e)}>\n                                        {this.props.allCourses ? (\n                                            \"Search Courses\"\n                                        ) : (\n                                            <Spinner as='span' animation='grow' size='sm' role='status' aria-hidden='true' />\n                                        )}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        allCourses: state.courses.allCourses,\n        providers: state.courses.providers,\n        universities: state.courses.universities,\n        subjects: state.courses.subjects\n    }\n}\nexport default connect(\n    mapStateToProps,\n    { fetchCourses, setSearchResult }\n)(Header)\n","import React, { Component } from \"react\"\nimport Card from \"react-bootstrap/Card\"\nimport \"./App/App.css\"\nexport class Course extends Component {\n    handleClick(url) {\n        if (url) window.open(url, \"_blank\")\n    }\n    render() {\n        const { course } = this.props\n        //console.log(course)\n        return (\n            <>\n                <Card className='course-card' onClick={() => this.handleClick(course.Url)} title={course[\"Course Name\"]}>\n                    <Card.Body>\n                        <Card.Title>\n                            {course[\"Course Name\"].slice(0, 80)}\n                            {course[\"Course Name\"].length >= 80 ? \"....\" : \"\"}\n                        </Card.Title>\n                        <Card.Text>\n                            {course[\"Parent Subject\"]}\n                            <br />\n                            {course[\"Universities\"][\"Institutions\"].split(\"|||\").join(\",\")}\n                            <br />\n                            <span className='course-length'>{course[\"Length\"]} weeks</span>\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className='text-muted'>Next Session: {course[\"Next Session Date\"]}</small>\n                    </Card.Footer>\n                </Card>\n            </>\n        )\n    }\n}\n\nexport default Course\n","import React, { Component } from \"react\"\nimport CardDeck from \"react-bootstrap/CardDeck\"\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\nimport Button from \"react-bootstrap/Button\"\nimport Course from \"./Course\"\nimport history from '../history'\nimport \"./App/App.css\"\nexport class CourseList extends Component {\n    viewAll(e,provider) {\n        e.preventDefault()\n        history.push(`/provider/${provider}`)\n    }\n    render() {\n        const { Provider } = this.props.courseList[0]\n        let button = \"\"\n        if (this.props.courseList.length > 6) {\n            button = (\n                <Button variant='success' className='button-primary' onClick={(e)=>this.viewAll(e,Provider)}>\n                    View All\n                </Button>\n            )\n        }\n        if (Provider) {\n            return (\n                <Jumbotron\n                    className='jumbotron'>\n                    <h4 style={{ \"marginBottom\": \"1.5rem\" }}>Courses from {Provider}</h4>\n                    <CardDeck className='card-deck'>\n                        {this.props.courseList.slice(0, 6).map((item, index) => {\n                            return <Course key={index} course={item} />\n                        })}\n                    </CardDeck>\n                    {button}\n                </Jumbotron>\n            )\n        } else {\n            return \"\"\n        }\n    }\n}\n\nexport default CourseList\n","import React from \"react\"\nimport \"./Loader.css\"\nimport loader from './loader.gif'\n\n/* Source : https://github.com/nguyenbathanh/react-loading-screen */\nexport default () => {\n    return (\n        <div className='ipl-progress-indicator' id='ipl-progress-indicator'>\n            <div className='ipl-progress-indicator-head'>\n                <div className='first-indicator' />\n                <div className='second-indicator' />\n            </div>\n            <div className='insp-logo-frame'>\n                <div className='insp-logo-frame-img'>\n                    <img src={loader} alt=\"\"/>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from \"react\"\nimport CourseList from \"./CourseList\"\nimport { connect } from \"react-redux\"\nimport { fetchCourses } from \"../actions/index\"\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\nimport \"./App/App.css\"\nimport Loader from \"./Loader/Loader\";\nexport class AllCourses extends Component {\n    componentDidMount() {\n        //this.props.fetchCourses()\n    }\n\n    renderAllLists() {\n        const providers = this.props.providers\n\n        const List = Object.keys(providers).map((key, index) => {\n            return <CourseList key={index} courseList={providers[key]} />\n        })\n\n        return List\n    }\n    render() {\n        if (this.props.providers) {\n            return (\n                <div>\n                    <div>\n                        <Jumbotron className='jumbotron' />\n                    </div>\n                    <h3 className='total-courses-text'>Total Courses Found : {this.props.allCourses.length}</h3>\n                    {this.renderAllLists()}\n                </div>\n            )\n        }\n\n        return <Loader />\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        allCourses: state.courses.allCourses,\n        providers: state.courses.providers\n    }\n}\nexport default connect(\n    mapStateToProps,\n    { fetchCourses }\n)(AllCourses)\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { fetchCourses } from \"../actions/index\"\nimport CardDeck from \"react-bootstrap/CardDeck\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport Button from \"react-bootstrap/Button\"\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\"\nimport Course from \"./Course\"\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\nimport _ from \"lodash\"\nimport \"./App/App.css\"\nimport CustomMenu from \"./CustomMenu\"\nimport Loader from \"./Loader/Loader\"\nexport class ProviderCourses extends Component {\n    state = { localCourses: [], childSubjects: [], filter: \"All\" }\n    componentDidMount() {\n        if (this.props.providers) {\n            this.populateState(this.props)\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.providers) {\n            this.populateState(nextProps)\n        }\n    }\n    populateState(props) {\n        let courses = props.providers[this.props.match.params.id]\n        let childSubjects = courses\n            .filter(item => {\n                return item[\"Child Subject\"] !== \"\"\n            })\n            .map(item => {\n                return item[\"Child Subject\"]\n            })\n        childSubjects = Array.from(new Set(childSubjects))\n        childSubjects.unshift(\"All\")\n        this.setState({ localCourses: courses, childSubjects })\n    }\n    sortLength(val) {\n        if (val === \"high\") {\n            this.setState({ localCourses: _.sortBy(this.state.localCourses, \"Length\").reverse() })\n        } else {\n            this.setState({ localCourses: _.sortBy(this.state.localCourses, \"Length\") })\n        }\n    }\n    onSelect(eventKey, eventObject) {\n        this.setState({ filter: this.state.childSubjects[eventKey] })\n    }\n    render() {\n        let provider = this.props.match.params.id\n        if (this.state.localCourses && this.state.localCourses.length > 0) {\n            return (\n                <>\n                    <div>\n                        <Jumbotron className='jumbotron' />\n                    </div>\n                    <h3 className='total-courses-text'>\n                        Total Courses Found :\n                        {\n                            this.state.localCourses.filter((item, index) => {\n                                return this.state.filter === \"All\" || item[\"Child Subject\"] === this.state.filter\n                            }).length\n                        }\n                    </h3>\n                    <div>\n                        <Jumbotron className='jumbotron'>\n                            <div style={{ display: \"-webkit-inline-box\" }}>\n                                <h4 style={{ marginBottom: \"1.5rem\" }}>All Courses from {provider}</h4>\n                                <Dropdown as={ButtonGroup} style={{ position: \"absolute\", right: \"10%\" }}>\n                                    <Button variant='success'>Sort By :</Button>\n\n                                    <Dropdown.Toggle split variant='success' id='dropdown-split-basic' />\n\n                                    <Dropdown.Menu>\n                                        <Dropdown.Item onClick={e => this.sortLength(\"high\")}>Highest Duration</Dropdown.Item>\n                                        <Dropdown.Item onClick={e => this.sortLength(\"low\")}>Lowest Duration</Dropdown.Item>\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                                <Dropdown as={ButtonGroup} style={{ position: \"absolute\", right: \"20%\" }}>\n                                    <Button variant='success'>\n                                        Filter: {this.state.filter === \"All\" ? \"\" : this.state.filter}\n                                    </Button>\n                                    <Dropdown.Toggle split variant='success' id='dropdown-split-basic' />\n\n                                    <Dropdown.Menu as={CustomMenu} className='custom-dropdown'>\n                                        {this.state.childSubjects.map((item, index) => {\n                                            if (item === this.state.filter) {\n                                                return (\n                                                    <Dropdown.Item key={index} eventKey={index} active='true'>\n                                                        {item}\n                                                    </Dropdown.Item>\n                                                )\n                                            }\n                                            return (\n                                                <Dropdown.Item\n                                                    key={index}\n                                                    onSelect={(ek, eo) => this.onSelect(ek, eo)}\n                                                    eventKey={index}\n                                                >\n                                                    {item}\n                                                </Dropdown.Item>\n                                            )\n                                        })}\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                                ,\n                            </div>\n                            <CardDeck className='card-deck'>\n                                {this.state.localCourses.map((item, index) => {\n                                    if (this.state.filter === \"All\" || item[\"Child Subject\"] === this.state.filter)\n                                        return <Course key={index} course={item} />\n                                    return \"\"\n                                })}\n                            </CardDeck>\n                        </Jumbotron>\n                    </div>\n                </>\n            )\n        } else {\n            return <Loader />\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        allCourses: state.courses.allCourses,\n        providers: state.courses.providers\n    }\n}\nexport default connect(\n    mapStateToProps,\n    { fetchCourses }\n)(ProviderCourses)\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport CardDeck from \"react-bootstrap/CardDeck\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport Button from \"react-bootstrap/Button\"\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\"\nimport Course from \"./Course\"\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\nimport _ from \"lodash\"\nimport \"./App/App.css\"\nimport CustomMenu from \"./CustomMenu\"\nexport class SearchResult extends Component {\n    state = { localCourses: [], childSubjects: [], filter: \"All\" }\n    componentDidMount() {\n        let childSubjects = this.props.searchResults\n            .filter(item => {\n                return item[\"Child Subject\"] !== \"\"\n            })\n            .map(item => {\n                return item[\"Child Subject\"]\n            })\n        childSubjects = Array.from(new Set(childSubjects))\n        childSubjects.unshift(\"All\")\n        this.setState({ localCourses: this.props.searchResults, childSubjects })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let childSubjects = nextProps.searchResults\n            .filter(item => {\n                return item[\"Child Subject\"] !== \"\"\n            })\n            .map(item => {\n                return item[\"Child Subject\"]\n            })\n        childSubjects = Array.from(new Set(childSubjects))\n        childSubjects.unshift(\"All\")\n        this.setState({ localCourses: nextProps.searchResults, childSubjects, filter: \"All\" })\n    }\n\n    sortLength(val) {\n        if (val === \"high\") {\n            this.setState({ localCourses: _.sortBy(this.state.localCourses, \"Length\").reverse() })\n        } else {\n            this.setState({ localCourses: _.sortBy(this.state.localCourses, \"Length\") })\n        }\n    }\n    onSelect(eventKey, eventObject) {\n        this.setState({ filter: this.state.childSubjects[eventKey] })\n    }\n    render() {\n        let content = (\n            <div className='no-result'>\n                No Results Found !<br />\n                Search Again\n            </div>\n        )\n        if (this.state.localCourses && this.state.localCourses.length > 0) {\n            content = (\n                <div>\n                    <Jumbotron className='jumbotron'>\n                        <div style={{ display: \"-webkit-inline-box\" }}>\n                            <h4 style={{ marginBottom: \"1.5rem\" }}>Search Results for \"<i>{this.props.searchTerm}</i>\" </h4>\n                            <Dropdown as={ButtonGroup} style={{ position: \"absolute\", right: \"10%\" }}>\n                                <Button variant='success'>Sort By :</Button>\n\n                                <Dropdown.Toggle split variant='success' id='dropdown-split-basic' />\n\n                                <Dropdown.Menu>\n                                    <Dropdown.Item onClick={e => this.sortLength(\"high\")}>Highest Duration</Dropdown.Item>\n                                    <Dropdown.Item onClick={e => this.sortLength(\"low\")}>Lowest Duration</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                            <Dropdown as={ButtonGroup} style={{ position: \"absolute\", right: \"20%\" }}>\n                                <Button variant='success'>Filter: {this.state.filter === \"All\" ? \"\" : this.state.filter}</Button>\n                                <Dropdown.Toggle split variant='success' id='dropdown-split-basic' />\n\n                                <Dropdown.Menu as={CustomMenu} className='custom-dropdown'>\n                                    {this.state.childSubjects.map((item, index) => {\n                                        if (item === this.state.filter) {\n                                            return (\n                                                <Dropdown.Item key={index} eventKey={index} active='true'>\n                                                    {item}\n                                                </Dropdown.Item>\n                                            )\n                                        }\n                                        return (\n                                            <Dropdown.Item\n                                                key={index}\n                                                onSelect={(ek, eo) => this.onSelect(ek, eo)}\n                                                eventKey={index}\n                                            >\n                                                {item}\n                                            </Dropdown.Item>\n                                        )\n                                    })}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                            ,\n                        </div>\n                        <CardDeck className='card-deck'>\n                            {this.state.localCourses.map((item, index) => {\n                                if (this.state.filter === \"All\" || item[\"Child Subject\"] === this.state.filter)\n                                    return <Course key={index} course={item} />\n                                return \"\"\n                            })}\n                        </CardDeck>\n                    </Jumbotron>\n                </div>\n            )\n        }\n        return (\n            <>\n                <div>\n                    <Jumbotron className='jumbotron' />\n                </div>\n                <h3 className='total-courses-text'>\n                    Total Courses Found :\n                    {\n                        this.state.localCourses.filter((item, index) => {\n                            return this.state.filter === \"All\" || item[\"Child Subject\"] === this.state.filter\n                        }).length\n                    }\n                </h3>\n                {content}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResults: state.courses.searchResults,\n        searchTerm: state.courses.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps)(SearchResult)\n","import React, { Component } from \"react\"\nimport Header from \"../Header\"\nimport AllCourses from \"../AllCourses\"\nimport ProviderCourses from \"../ProviderCourses\"\nimport SearchResult from \"../SearchResult\"\nimport { Router, Route, Switch } from \"react-router-dom\"\nimport \"./App.css\"\nimport history from \"../../history\"\nclass App extends Component {\n    render() {\n        return (\n            <div className='App'>\n                <Router history={history}>\n                    <Header />\n                    <Switch>\n                        <Route path='/' exact component={AllCourses} />\n                        <Route path='/provider/:id' exact component={ProviderCourses} />\n                        <Route path='/search' exact component={SearchResult} />\n                    </Switch>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import { combineReducers } from \"redux\"\nimport coursesReducer from './coursesReducer'\n\nexport default combineReducers({\n  courses:coursesReducer\n})","export default (state = { searchResults: [] }, action) => {\n    switch (action.type) {\n        case \"FETCH_COURSES\":\n            let providers = {}\n            let subjects = {}\n            let universities = {}\n            let allCourses = action.payload.map(item => {\n                if (!item.Length) item.Length = 1\n                if (providers.hasOwnProperty(item.Provider)) {\n                    providers[item.Provider].push(item)\n                } else {\n                    providers[item.Provider] = []\n                    providers[item.Provider].push(item)\n                }\n                if (subjects.hasOwnProperty(item[\"Parent Subject\"])) {\n                    subjects[item[\"Parent Subject\"]].push(item)\n                } else {\n                    subjects[item[\"Parent Subject\"]] = []\n                    subjects[item[\"Parent Subject\"]].push(item)\n                }\n                let Institutions = item.Universities.Institutions.split(\"|||\")\n                Institutions.forEach(element => {\n                    if (universities.hasOwnProperty(element)) {\n                        universities[element].push(item)\n                    } else {\n                        universities[element] = []\n                        universities[element].push(item)\n                    }\n                })\n                return item\n            })\n            return { ...state, allCourses, providers, subjects, universities }\n\n        case \"SET_SEARCH_RESULT\":\n            return { ...state, searchResults: action.payload.result, searchTerm: action.payload.searchTerm }\n        default:\n            return state\n    }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App/App\"\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport reducers from \"./reducers\"\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n)\n","module.exports = __webpack_public_path__ + \"static/media/loader.76eae1ca.gif\";"],"sourceRoot":""}